WYMAGANIA DLA 0.5:
- poprawić 9-3(a)
- part III
- ujednolicić duże nawiasy (może jednak przejść na \left, \right?) -> 11-1(a) średnio wygląda...
- A może przenieść wszystkie definicje funkcji jako inline do plików nagłówkowych?
- Czy złożoność obliczeniową liczymy względem bitów czy względem liczb? (http://en.wikipedia.org/wiki/Bit_complexity).
- uściślić konwencje stosowania ~ w sytuacjach innych niż sieroty (liczby, zakresy, zmienne, niektóre wyrażenia językowe, ...)
- sprawdzić dwustronność, czy rozdziały lub części mają rozpoczynać się zawsze od nieparzystej/parzystej strony?
- sprawdzić bibliografię -- czy taki wygląd może zostać?
- jak poradzić sobie z problemem coraz większej ilości pseudokodów w rozdziale i underfull vboxami przez nie generowanymi? (pakiet float i zdefiniowanie otoczenia \begin{pseudocode}\vspace{-.5cm} ... \vspace{-.8cm}\end{pseudocode} (?)) -- na str. 215 i 216 w Podręczniku jest podzielony pseudokod na dwie strony
- zmniejszyć odstęp między numerem problemu a jego nazwą (?)
- ostateczne zmiany w layoucie, konwencjach itd. -- takie, które dotyczą wszystkich wspólnych aspektów rozdziałów
- ostateczne strony początkowe i końcowe, spis {algorytmów|rysunków|tabel} (?)
- uporządkować cormensol.tex, cormensol.sty (poprawić polecenia wyświetlające liczniki)
- uaktualnić wstęp i stronę tytułową
- sprawdzić pisownię
- Asymptote, TikZ, PGF jako narzędzia do tworzenia rysunków?
- odblokować właściwe definicje \refExercise i \refProblem

WYMAGANIA DLA 0.6:
- part IV
- podzielić strukturę katalogową projektu na podkatalogi każdy z materiałami do np. osobnej części (?)
- uaktualnić wstęp i stronę tytułową, sprawdzić pisownię, odblokować właściwe definicje \refExercise i \refProblem

WYMAGANIA DLA 0.7:
- part V
- uaktualnić wstęp i stronę tytułową, sprawdzić pisownię, odblokować właściwe definicje \refExercise i \refProblem

WYMAGANIA DLA 0.8:
- part VI
- uaktualnić wstęp i stronę tytułową, sprawdzić pisownię, odblokować właściwe definicje \refExercise i \refProblem

WYMAGANIA DLA 0.9:
- ch27, ch28, ch29, ch30
- uaktualnić wstęp i stronę tytułową, sprawdzić pisownię, odblokować właściwe definicje \refExercise i \refProblem

WYMAGANIA DLA 1.0:
- ch31, ch32, ch33, ch34, ch35
- uaktualnić wstęp i stronę tytułową, sprawdzić pisownię, odblokować właściwe definicje \refExercise i \refProblem

PRZYSZŁE WERSJE:
- rozwiązania zadań i problemów wydania 3
- clrscode3e zamiast clrscode
- przerobić na stronę WWW wykorzystującą MathJax
- przetłumaczyć na język angielski
- zaprojektować bibliotekę algorytmów i struktur danych pojawiających się w podręczniku i w rozwiązaniach

DO POPRAWY/WERYFIKACJI W PRZYSZŁOŚCI:
(zadania zaznaczane jako rozwiązane poprawnie, ale w których można dokonać poprawek/ulepszeń po przerobieniu większej ilości materiału)
1 -- sprawdzić cały rozdział po zrobieniu wszystkich pozostałych
6.5-6 -- zaimplementować kolejkę FIFO i stos na kolejce priorytetowej (po ch10) -- dopisać operację porównania par elementów, znaleźć sposób na szablonowe MaxHeapInsert, MinHeapInsert
6.5-8 -- zaimplementować procedurę na listach (po ch10) -- ok, ale usprawnić znajdowanie listy zawierającej dany element poprzez pamiętanie jej indeksu razem z elementem w kolejce
6-3(c) -- wymyślić prostszy pseudokod
8.3-2 -- jak obliczać złożoność pamięciową? w manualu jest analiza na bitach i wychodzi O(n\lg n) zamiast O(n)
9-2(e) -- opisać ThreeWayPartition i Select' (jeśli nigdzie indziej nie będą rozważane)
10-2(b) -- które operacje działają w czasach zamortyzowanych, a które w "zwykłych"? (po ch20)
10-2 -- czy można zaimplementować kopiec złączalny szybciej? (po ch21)
11.4-3 -- (po ch31)
B-3(a) -- uprościć dowód

################################################################################

ROZDZIAŁ 1
ROZDZIAŁ 2
ROZDZIAŁ 3
ROZDZIAŁ 4
ROZDZIAŁ 5

ROZDZIAŁ 6
ROZDZIAŁ 7
ROZDZIAŁ 8

ROZDZIAŁ 9
9.3(a) -- czy opisywać kruczki implementacyjne? poprawić algorytm: co z zamianami elementu A[r]? nie działa dla rozmiarów innych niż potęgi 2

ROZDZIAŁ 10
10.4-6 -- są 2 podejścia:
	1. najbardziej prawy syn węzła x wskazuje na x i wówczas, aby znaleźć ojca x, należy przejść po braciach x (złożoność czasowa zależy nie od synów ale od braci x)
	2. najbardziej prawy syn węzła x wskazuje na ojca x, czyli swojego dziadka, ale wówczas musimy dodać węzłów-wartowników jako synów węzłów-liści drzewa; wartowniki te będą miały na celu jedynie przechowywanie wskaźnika do ojca x (pamięć może wzrosnąć prawie dwukrotnie, gdy każdy węzeł drzewa z wyjątkiem jego korzenia jest liściem)
	Można zamienić zmienną boolowską (dwuwartościową) na zmienną trójwartościową -- wówczas można rozróżniać ojca x od jego synów.
10-3(a)
10-3(g)

ROZDZIAŁ 11
-- implementacje
11.3-5 >>> http://ripcrixalis.blog.com/2011/02/08/clrs-11-3-hash-functions/
11.3-6 >>> http://ripcrixalis.blog.com/2011/02/08/clrs-11-3-hash-functions/
11.5-1 -- sprawdzić pierwszą część, dopisać drugą część
11-1(b) -- przerobić, rezygnujemy z założenia o równomiernym haszowaniu
11-2(d) -- napisać, sprawdzić
11-4 >>> http://ripcrixalis.blog.com/2011/02/08/clrs-chapter-11/
11-4(a)
11-4(b)
11-4(c)
11-4(d)

ROZDZIAŁ 12
12.1-1
12.1-2
12.1-3
12.1-4
12.1-5
12.2-1
12.2-2
12.2-3
12.2-4
12.2-5
12.2-6
12.2-7
12.2-8
12.2-9
12.3-1
12.3-2
12.3-3
12.3-4
12.3-5
12.3-6
12.4-1
12.4-2
12.4-3
12.4-4
12.4-5
12-1(a)
12-1(b)
12-1(c)
12-1(d)
12-3(a)
12-3(b)
12-3(c)
12-3(d)
12-3(e)
12-3(f)
12-4(a)
12-4(b)
12-4(c)
12-4(d)

ROZDZIAŁ 13
13.1-1
13.1-2
13.1-3
13.1-4
13.1-5
13.1-6
13.1-7
13.2-1
13.2-2
13.2-3
13.2-4
13.2-5
13.3-1
13.3-2
13.3-3
13.3-4
13.3-5
13.3-6
13.4-1
13.4-2
13.4-3
13.4-4
13.4-5
13.4-6
13.4-7
13-1(a)
13-1(b)
13-1(c)
13-1(d)
13-1(e)
13-2(a)
13-2(b)
13-2(c)
13-2(d)
13-2(e)
13-2(f)
13-3(a)
13-3(b)
13-3(c)
13-3(d)
13-4(a)
13-4(b)
13-4(c)
13-4(d)
13-4(e)
13-4(f)
13-4(g)
13-4(h)
13-4(i)
13-4(j)

ROZDZIAŁ 14
14.1-1
14.1-2
14.1-3
14.1-4
14.1-5
14.1-6
14.1-7
14.1-8
14.2-1
14.2-2
14.2-3
14.2-4
14.2-5
14.3-1
14.3-2
14.3-3
14.3-4
14.3-5
14.3-6
14.3-7
14-1(a)
14-1(b)
14-2(a)
14-2(b)

DODATEK A
DODATEK B
DODATEK C